{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken';\nimport { logoutUser, setCurrentUser } from 'features/auth/authSlice';\n\nvar checkAuth = function checkAuth(store) {\n  // Check for token to keep user logged in\n  if (localStorage.token) {\n    // Set auth token header auth\n    var token = localStorage.token;\n    setAuthToken(token); // Decode token and get user info and exp\n\n    var decoded = jwt_decode(token); // Set user and isAuthenticated\n\n    store.dispatch(setCurrentUser(decoded.user)); // Check for expired token\n\n    var currentTime = Date.now() / 1000; // to get in milliseconds\n\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n\n      window.location.href = './login';\n    }\n  }\n};\n\nexport default checkAuth;","map":{"version":3,"sources":["/home/sujan/Desktop/mern-auth-bolierplate/client/src/utils/checkAuth.js"],"names":["jwt_decode","setAuthToken","logoutUser","setCurrentUser","checkAuth","store","localStorage","token","decoded","dispatch","user","currentTime","Date","now","exp","window","location","href"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,yBAA3C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzB;AACA,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtB;AACA,QAAMA,KAAK,GAAGD,YAAY,CAACC,KAA3B;AACAN,IAAAA,YAAY,CAACM,KAAD,CAAZ,CAHsB,CAItB;;AACA,QAAMC,OAAO,GAAGR,UAAU,CAACO,KAAD,CAA1B,CALsB,CAMtB;;AACAF,IAAAA,KAAK,CAACI,QAAN,CAAeN,cAAc,CAACK,OAAO,CAACE,IAAT,CAA7B,EAPsB,CAQtB;;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATsB,CASiB;;AACvC,QAAIL,OAAO,CAACM,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAN,MAAAA,KAAK,CAACI,QAAN,CAAeP,UAAU,EAAzB,EAF6B,CAG7B;;AACAa,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;AACF,CAnBD;;AAqBA,eAAeb,SAAf","sourcesContent":["import jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken';\nimport { logoutUser, setCurrentUser } from 'features/auth/authSlice';\n\nconst checkAuth = store => {\n  // Check for token to keep user logged in\n  if (localStorage.token) {\n    // Set auth token header auth\n    const token = localStorage.token;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded.user));\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n      // Redirect to login\n      window.location.href = './login';\n    }\n  }\n};\n\nexport default checkAuth;\n"]},"metadata":{},"sourceType":"module"}