{"ast":null,"code":"import _regeneratorRuntime from \"/home/sujan/Desktop/disease-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sujan/Desktop/disease-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sujan/Desktop/disease-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sujan/Desktop/disease-predictor/client/src/components/layout/Landing.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Send } from \"../../helper\";\nimport Loader from \"react-loader-spinner\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nconst Landing = () => {\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  const history = useHistory();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        diseases = _useState2[0],\n        setDiseases = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        symptoms = _useState6[0],\n        setSymptoms = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1]; // If logged in redirect to dashboard\n\n\n  useEffect(() => {\n    if (isAuth) history.push(\"/dashboard\");\n  }, [isAuth]);\n\n  const handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setLoading(true);\n            _context.next = 4;\n            return Send(symptoms);\n\n          case 4:\n            res = _context.sent;\n\n            if (res.length > 0) {\n              setDiseases(res);\n              setLoading(false);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center m-l70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner__section mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group main__input mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n    type: \"text\",\n    className: \"form-control input__type__inner\",\n    placeholder: \"HOW DO YOU FEEL?\",\n    \"aria-label\": \"Username\",\n    \"aria-describedby\": \"basic-addon1\",\n    minRows: 1,\n    maxRows: 6,\n    value: symptoms,\n    onChange: e => setSymptoms(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\\"Provide more symptoms to get correct data\\\"\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary btn__main text-uppercase\",\n    disabled: !symptoms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Predict\")))), loading === true && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Loader, {\n    type: \"ThreeDots\",\n    color: \"#6c757d\",\n    height: 100,\n    width: 1000,\n    visible: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, message)), diseases.length > 0 && loading === false && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, diseases.map(disease => {\n    let now = disease.probability;\n    return /*#__PURE__*/React.createElement(Accordion, {\n      key: disease._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      now: disease.probability,\n      label: \"\".concat(disease.name, \" \").concat(now, \"%\"),\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"This is first tab body\"))));\n  })));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/home/sujan/Desktop/disease-predictor/client/src/components/layout/Landing.js"],"names":["React","useEffect","useState","useHistory","useSelector","TextareaAutosize","Send","Loader","Accordion","Card","ProgressBar","Landing","isAuth","state","auth","isAuthenticated","history","diseases","setDiseases","loading","setLoading","symptoms","setSymptoms","message","setMessage","push","handleSubmit","e","preventDefault","res","length","target","value","textAlign","map","disease","now","probability","_id","Header","name"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState} from \"react\";\nimport {useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Send } from \"../../helper\";\nimport Loader from \"react-loader-spinner\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nconst Landing = () => {\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\n  const history = useHistory();\n  const [diseases,setDiseases] = useState([]);\n  const [loading,setLoading] = useState(false);\n  const [symptoms,setSymptoms] = useState(\"\");\n  const [message,setMessage] = useState(\"\");\n  // If logged in redirect to dashboard\n  useEffect(() => {\n    if (isAuth) history.push(\"/dashboard\");\n  \n  }, [isAuth]);\n\n  const handleSubmit = async (e)=>{\n    e.preventDefault();\n    setLoading(true);\n    let res = await Send(symptoms);\n    if(res.length>0){\n      setDiseases(res);\n      setLoading(false);\n    }\n  }\n\n  \n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"row justify-content-center align-items-center m-l70\">\n          <div className=\"col-8 p-0\">\n            <div className=\"inner__section mt-4\">\n              <div className=\"input-group main__input mb-3\">\n                <TextareaAutosize\n                  type=\"text\"\n                  className=\"form-control input__type__inner\"\n                  placeholder=\"HOW DO YOU FEEL?\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                  minRows={1}\n                  maxRows={6}\n                  value={symptoms}\n                  onChange={(e)=> setSymptoms(e.target.value)}\n                />\n                <p>\"Provide more symptoms to get correct data\"</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-1\">\n            <button className=\"btn btn-secondary btn__main text-uppercase\" disabled={!symptoms}>Predict</button>\n          </div>\n        </div>\n      </form>\n      {loading === true &&  <div style={{ textAlign: \"center\" }}>\n        <br></br>\n        <br></br>\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#6c757d\"\n          height={100}\n          width={1000}\n          visible={loading}\n        />\n        <span>{message}</span>\n      </div>}\n      {diseases.length>0 && loading === false && \n        <div>\n        {diseases.map((disease)=> {\n          let now = disease.probability;\n          return   <Accordion key={disease._id}>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            <ProgressBar now={disease.probability} label={`${disease.name} ${now}%`} variant=\"success\" />\n            </Accordion.Toggle>\n\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>This is first tab body</Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        }\n        )}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}